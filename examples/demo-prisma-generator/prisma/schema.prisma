datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator generator_genseki {
  provider = "node ./node_modules/@genseki/prisma-generator"
}

model User {
  id      Int      @id @default(autoincrement())
  email   String   @unique
  name    String?
  role    Role     @default(USER)
  posts   Post[]
  profile Profile?
  orders  Order[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Post {
  id        Int     @id @default(autoincrement())
  published Boolean @default(false)
  title     String  @db.VarChar(255)

  authorId Int
  author   User @relation(fields: [authorId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Profile {
  id  Int     @id @default(autoincrement())
  bio String?

  userId Int  @unique
  user   User @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Order {
  id    Int   @id @default(autoincrement())
  total Float

  userId Int
  user   User @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model CompoundPk {
  id1 Int
  id2 Int

  field1 String
  field2 String

  @@id([id1, id2])
  @@unique([field1, field2])
  @@map("compound_pk")
}

enum Role {
  USER
  ADMIN
}

enum Status {
  PENDING
  COMPLETED
}
