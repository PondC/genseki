import { DataType, model, SchemaType, type Simplify } from '@genseki/prisma-generator'

export const TableAModel = model(
  {
    id: {
      schema: SchemaType.COLUMN,
      name: 'id',
      isId: true,
      isList: false,
      isUnique: false,
      isReadOnly: false,
      isRequired: true,
      hasDefaultValue: false,
      dataType: DataType.STRING,
    },
    name: {
      schema: SchemaType.COLUMN,
      name: 'name',
      isId: false,
      isList: false,
      isUnique: false,
      isReadOnly: false,
      isRequired: true,
      hasDefaultValue: false,
      dataType: DataType.STRING,
    },
    description: {
      schema: SchemaType.COLUMN,
      name: 'description',
      isId: false,
      isList: false,
      isUnique: false,
      isReadOnly: false,
      isRequired: false,
      hasDefaultValue: false,
      dataType: DataType.STRING,
    },
    createdAt: {
      schema: SchemaType.COLUMN,
      name: 'createdAt',
      isId: false,
      isList: false,
      isUnique: false,
      isReadOnly: false,
      isRequired: true,
      hasDefaultValue: true,
      dataType: DataType.DATETIME,
    },
    updatedAt: {
      schema: SchemaType.COLUMN,
      name: 'updatedAt',
      isId: false,
      isList: false,
      isUnique: false,
      isReadOnly: false,
      isRequired: true,
      hasDefaultValue: false,
      dataType: DataType.DATETIME,
    },
    tableB: {
      schema: SchemaType.RELATION,
      name: 'tableB',
      isId: false,
      isList: true,
      isUnique: false,
      isReadOnly: false,
      isRequired: true,
      hasDefaultValue: false,
      relationName: 'TableAToTableB',
      referencedModel: 'TableB',
      relationToFields: [],
      relationFromFields: [],
    },
    tableC: {
      schema: SchemaType.RELATION,
      name: 'tableC',
      isId: false,
      isList: true,
      isUnique: false,
      isReadOnly: false,
      isRequired: true,
      hasDefaultValue: false,
      relationName: 'TableAToTableC',
      referencedModel: 'TableC',
      relationToFields: [],
      relationFromFields: [],
    },
  },
  {
    name: 'TableAModel',
    dbModelName: 'TableA',
    prismaModelName: 'TableA',
    primaryFields: ['id'],
    uniqueFields: [['id']],
  }
)

export type TableAModel = Simplify<typeof TableAModel>

export const TableBModel = model(
  {
    id: {
      schema: SchemaType.COLUMN,
      name: 'id',
      isId: true,
      isList: false,
      isUnique: false,
      isReadOnly: false,
      isRequired: true,
      hasDefaultValue: false,
      dataType: DataType.STRING,
    },
    name: {
      schema: SchemaType.COLUMN,
      name: 'name',
      isId: false,
      isList: false,
      isUnique: false,
      isReadOnly: false,
      isRequired: true,
      hasDefaultValue: false,
      dataType: DataType.STRING,
    },
    description: {
      schema: SchemaType.COLUMN,
      name: 'description',
      isId: false,
      isList: false,
      isUnique: false,
      isReadOnly: false,
      isRequired: false,
      hasDefaultValue: false,
      dataType: DataType.STRING,
    },
    createdAt: {
      schema: SchemaType.COLUMN,
      name: 'createdAt',
      isId: false,
      isList: false,
      isUnique: false,
      isReadOnly: false,
      isRequired: true,
      hasDefaultValue: true,
      dataType: DataType.DATETIME,
    },
    updatedAt: {
      schema: SchemaType.COLUMN,
      name: 'updatedAt',
      isId: false,
      isList: false,
      isUnique: false,
      isReadOnly: false,
      isRequired: true,
      hasDefaultValue: false,
      dataType: DataType.DATETIME,
    },
    tableA: {
      schema: SchemaType.RELATION,
      name: 'tableA',
      isId: false,
      isList: true,
      isUnique: false,
      isReadOnly: false,
      isRequired: true,
      hasDefaultValue: false,
      relationName: 'TableAToTableB',
      referencedModel: 'TableA',
      relationToFields: [],
      relationFromFields: [],
    },
    tableCId: {
      schema: SchemaType.COLUMN,
      name: 'tableCId',
      isId: false,
      isList: false,
      isUnique: false,
      isReadOnly: true,
      isRequired: true,
      hasDefaultValue: false,
      dataType: DataType.STRING,
    },
    tableC: {
      schema: SchemaType.RELATION,
      name: 'tableC',
      isId: false,
      isList: false,
      isUnique: false,
      isReadOnly: false,
      isRequired: true,
      hasDefaultValue: false,
      relationName: 'TableBToTableC',
      referencedModel: 'TableC',
      relationToFields: ['id'],
      relationFromFields: ['tableCId'],
    },
  },
  {
    name: 'TableBModel',
    dbModelName: 'TableB',
    prismaModelName: 'TableB',
    primaryFields: ['id'],
    uniqueFields: [['id']],
  }
)

export type TableBModel = Simplify<typeof TableBModel>

export const TableCModel = model(
  {
    id: {
      schema: SchemaType.COLUMN,
      name: 'id',
      isId: true,
      isList: false,
      isUnique: false,
      isReadOnly: false,
      isRequired: true,
      hasDefaultValue: false,
      dataType: DataType.STRING,
    },
    name: {
      schema: SchemaType.COLUMN,
      name: 'name',
      isId: false,
      isList: false,
      isUnique: false,
      isReadOnly: false,
      isRequired: true,
      hasDefaultValue: false,
      dataType: DataType.STRING,
    },
    description: {
      schema: SchemaType.COLUMN,
      name: 'description',
      isId: false,
      isList: false,
      isUnique: false,
      isReadOnly: false,
      isRequired: false,
      hasDefaultValue: false,
      dataType: DataType.STRING,
    },
    createdAt: {
      schema: SchemaType.COLUMN,
      name: 'createdAt',
      isId: false,
      isList: false,
      isUnique: false,
      isReadOnly: false,
      isRequired: true,
      hasDefaultValue: true,
      dataType: DataType.DATETIME,
    },
    updatedAt: {
      schema: SchemaType.COLUMN,
      name: 'updatedAt',
      isId: false,
      isList: false,
      isUnique: false,
      isReadOnly: false,
      isRequired: true,
      hasDefaultValue: false,
      dataType: DataType.DATETIME,
    },
    tableA: {
      schema: SchemaType.RELATION,
      name: 'tableA',
      isId: false,
      isList: true,
      isUnique: false,
      isReadOnly: false,
      isRequired: true,
      hasDefaultValue: false,
      relationName: 'TableAToTableC',
      referencedModel: 'TableA',
      relationToFields: [],
      relationFromFields: [],
    },
    tableB: {
      schema: SchemaType.RELATION,
      name: 'tableB',
      isId: false,
      isList: true,
      isUnique: false,
      isReadOnly: false,
      isRequired: true,
      hasDefaultValue: false,
      relationName: 'TableBToTableC',
      referencedModel: 'TableB',
      relationToFields: [],
      relationFromFields: [],
    },
  },
  {
    name: 'TableCModel',
    dbModelName: 'TableC',
    prismaModelName: 'TableC',
    primaryFields: ['id'],
    uniqueFields: [['id']],
  }
)

export type TableCModel = Simplify<typeof TableCModel>
